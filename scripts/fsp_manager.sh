#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Fair Sber Price
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/fsp_manager.sh [–∫–æ–º–∞–Ω–¥–∞] [–æ–ø—Ü–∏–∏]

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–∞
info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
error() { echo -e "${RED}‚ùå $1${NC}"; }

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
check_project_dir() {
    if [[ ! -f "$PROJECT_DIR/docker-compose.prod.yml" ]]; then
        error "–ù–µ –Ω–∞–π–¥–µ–Ω docker-compose.prod.yml. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞."
        exit 1
    fi
    cd "$PROJECT_DIR"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
show_help() {
    echo "Fair Sber Price - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞] [–æ–ø—Ü–∏–∏]"
    echo ""
    echo "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  deploy      - –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "  start       - –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "  stop        - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "  restart     - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "  status      - –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "  logs        - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ (–æ–ø—Ü–∏—è: –∏–º—è —Å–µ—Ä–≤–∏—Å–∞)"
    echo ""
    echo "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
    echo "  health      - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "  fix         - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Å—Ç—ã—Ö –ø—Ä–æ–±–ª–µ–º"
    echo "  fix-bot     - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å Telegram –±–æ—Ç–æ–º"
    echo "  fix-perms   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"
    echo "  debug-404   - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ 404 –æ—à–∏–±–∫–∏"
    echo "  debug-bot   - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Telegram –±–æ—Ç–∞"
    echo "  debug-net   - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø—Ä–æ–±–ª–µ–º"
    echo ""
    echo "–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ:"
    echo "  update      - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤"
    echo "  backup      - –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo "  clean       - –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤"
    echo "  nginx       - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Nginx"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 deploy   # –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π"
    echo "  $0 logs web # –õ–æ–≥–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "  $0 debug-bot # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Telegram –±–æ—Ç–∞"
}

# –î–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
deploy() {
    info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π Fair Sber Price..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose -f docker-compose.prod.yml down || true
    
    # –°–æ–∑–¥–∞–Ω–∏–µ .env –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [[ ! -f .env ]]; then
        warning ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
        cp .env.example .env
        warning "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏!"
        return 1
    fi
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    info "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    mkdir -p fsp/logs fsp/staticfiles ssl
    
    if [[ ! -f fsp/db.sqlite3 ]]; then
        touch fsp/db.sqlite3
    fi
    
    chmod 666 fsp/db.sqlite3
    chmod 755 fsp/logs fsp/staticfiles
    chown -R 1000:1000 fsp/ 2>/dev/null || true
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤
    info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤..."
    docker pull ghcr.io/grigra27/fair_sber_price-web:latest || warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å web –æ–±—Ä–∞–∑"
    docker pull ghcr.io/grigra27/fair_sber_price-bot:latest || warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å bot –æ–±—Ä–∞–∑"
    docker pull redis:7-alpine
    docker pull nginx:alpine
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose -f docker-compose.prod.yml up -d
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (30 —Å–µ–∫—É–Ω–¥)..."
    sleep 30
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    status
    health
    
    success "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
    info "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://$(hostname -I | awk '{print $1}')/"
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
start() {
    info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose -f docker-compose.prod.yml up -d
    success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
stop() {
    info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose -f docker-compose.prod.yml down
    success "–°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
restart() {
    info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose -f docker-compose.prod.yml restart
    success "–°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
}

# –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
status() {
    info "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose -f docker-compose.prod.yml ps
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
logs() {
    local service=${1:-""}
    if [[ -n "$service" ]]; then
        info "–õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞ $service:"
        docker logs "fsp_$service" --tail=50 -f
    else
        info "–õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
        docker-compose -f docker-compose.prod.yml logs --tail=20
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
health() {
    info "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    local containers=$(docker-compose -f docker-compose.prod.yml ps --services)
    for container in $containers; do
        local status=$(docker inspect "fsp_$container" --format='{{.State.Status}}' 2>/dev/null || echo "not found")
        if [[ "$status" == "running" ]]; then
            success "$container: —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            error "$container: $status"
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint..."
    if curl -f http://localhost/api/health/ >/dev/null 2>&1; then
        success "Health endpoint: OK"
    elif curl -f http://localhost:8000/api/health/ >/dev/null 2>&1; then
        warning "Health endpoint: OK (—á–µ—Ä–µ–∑ –ø–æ—Ä—Ç 8000)"
    else
        error "Health endpoint: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –±–æ—Ç–∞
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –±–æ—Ç–∞..."
    local bot_logs=$(docker logs fsp_telegram_bot --tail=5 2>/dev/null | grep -i "error\|exception" || true)
    if [[ -z "$bot_logs" ]]; then
        success "Telegram –±–æ—Ç: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        warning "Telegram –±–æ—Ç: –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã"
    fi
    
    # –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ health check
    info "–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ health check:"
    curl -s http://localhost:8000/api/health/ | python3 -m json.tool 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JSON –æ—Ç–≤–µ—Ç"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker health status
    info "Docker health status:"
    docker inspect fsp_web --format='{{.State.Health.Status}}' 2>/dev/null || echo "Health check –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
fix() {
    info "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Å—Ç—ã—Ö –ø—Ä–æ–±–ª–µ–º..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ nginx
    if systemctl is-active --quiet nginx 2>/dev/null; then
        warning "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ nginx..."
        systemctl stop nginx
        systemctl disable nginx
    fi
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    info "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    chmod 666 fsp/db.sqlite3 2>/dev/null || true
    chmod 755 fsp/logs fsp/staticfiles 2>/dev/null || true
    chown -R 1000:1000 fsp/ 2>/dev/null || true
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
    if command -v ufw >/dev/null 2>&1; then
        info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞..."
        ufw allow 80/tcp >/dev/null 2>&1 || true
        ufw allow 443/tcp >/dev/null 2>&1 || true
        ufw allow 8000/tcp >/dev/null 2>&1 || true
    fi
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    restart
    
    success "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å Telegram –±–æ—Ç–æ–º
fix_bot() {
    info "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å Telegram –±–æ—Ç–æ–º..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
    info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞..."
    docker-compose -f docker-compose.prod.yml stop telegram-bot
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    info "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    docker-compose -f docker-compose.prod.yml rm -f telegram-bot
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–∑ –±–æ—Ç–∞
    info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–∞ –±–æ—Ç–∞..."
    docker pull ghcr.io/grigra27/fair_sber_price-bot:latest
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    if [ -f .env ]; then
        source .env
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    missing_vars=""
    if [ -z "$TELEGRAM_BOT_TOKEN" ]; then
        missing_vars="$missing_vars TELEGRAM_BOT_TOKEN"
    fi
    if [ -z "$SECRET_KEY" ]; then
        missing_vars="$missing_vars SECRET_KEY"
    fi
    if [ -z "$ALLOWED_HOSTS" ]; then
        missing_vars="$missing_vars ALLOWED_HOSTS"
    fi
    
    if [ -n "$missing_vars" ]; then
        error "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:$missing_vars"
        error "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env"
        return 1
    fi
    
    success "–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    if [ ! -f "./fsp/db.sqlite3" ]; then
        warning "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º..."
        touch ./fsp/db.sqlite3
        chmod 664 ./fsp/db.sqlite3
    fi
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤..."
    mkdir -p ./fsp/logs
    chmod 755 ./fsp/logs
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    info "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
    docker-compose -f docker-compose.prod.yml up -d telegram-bot
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞..."
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞..."
    docker-compose -f docker-compose.prod.yml ps telegram-bot
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏
    info "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –±–æ—Ç–∞:"
    docker logs fsp_telegram_bot --tail=20
    
    success "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
}

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
fix_permissions() {
    info "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose -f docker-compose.prod.yml down
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
    info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏..."
    mkdir -p fsp/logs
    mkdir -p fsp/staticfiles
    chmod 755 fsp/logs
    chmod 755 fsp/staticfiles
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    if [ ! -f "fsp/db.sqlite3" ]; then
        info "–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
        touch fsp/db.sqlite3
    fi
    chmod 664 fsp/db.sqlite3
    
    # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏
    info "–¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
    if [ -w "fsp/db.sqlite3" ]; then
        success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏"
    else
        warning "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
        chmod 664 fsp/db.sqlite3
        chown 1000:1000 fsp/db.sqlite3
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –Ω–∞ –≤—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    chown -R 1000:1000 fsp/
    find fsp/ -type d -exec chmod 755 {} \;
    find fsp/ -type f -exec chmod 644 {} \;
    chmod 664 fsp/db.sqlite3
    chmod 755 fsp/logs
    chmod 755 fsp/staticfiles
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–∑—ã
    info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤..."
    docker pull ghcr.io/grigra27/fair_sber_price-web:latest
    docker pull ghcr.io/grigra27/fair_sber_price-bot:latest
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    info "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose -f docker-compose.prod.yml up -d
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 30
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose -f docker-compose.prod.yml ps
    
    success "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
}

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ 404 –æ—à–∏–±–∫–∏
debug_404() {
    info "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ 404 –æ—à–∏–±–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ..."
    
    # –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    info "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose -f docker-compose.prod.yml ps
    
    info "–õ–æ–≥–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å—Ç—Ä–æ–∫):"
    docker logs fsp_web --tail=30
    
    info "–¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
    docker exec fsp_web curl -I http://localhost:8000/ 2>/dev/null || error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∏–∑–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    
    info "–¢–µ—Å—Ç —Å —Ö–æ—Å—Ç–∞:"
    curl -I http://localhost:8000/ 2>/dev/null || error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —Å —Ö–æ—Å—Ç–∞"
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Django URL patterns:"
    docker exec fsp_web python manage.py show_urls 2>/dev/null || warning "–ö–æ–º–∞–Ω–¥–∞ show_urls –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:"
    docker exec fsp_web python manage.py check
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤:"
    docker exec fsp_web ls -la /app/staticfiles/ | head -10
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤:"
    docker exec fsp_web ls -la /app/templates/
    
    info "–¢–µ—Å—Ç health endpoint:"
    curl -s http://localhost:8000/api/health/ | python3 -m json.tool 2>/dev/null || error "Health endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
    docker exec fsp_web env | grep -E "(DEBUG|ALLOWED_HOSTS|DJANGO_SETTINGS_MODULE)" | sed 's/=.*/=***/'
    
    success "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Telegram –±–æ—Ç–∞
debug_bot() {
    info "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Telegram –±–æ—Ç–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    info "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose -f docker-compose.prod.yml ps
    
    info "–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:"
    docker inspect fsp_telegram_bot --format='{{.State.Status}}: {{.State.Error}}'
    
    info "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –±–æ—Ç–∞:"
    docker logs fsp_telegram_bot --tail=50
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –±–æ—Ç–∞:"
    docker exec fsp_telegram_bot env | grep -E "(TELEGRAM_BOT_TOKEN|DJANGO_SETTINGS_MODULE|SECRET_KEY)" | sed 's/=.*/=***/'
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
    docker exec fsp_telegram_bot python manage.py check
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:"
    docker exec fsp_telegram_bot python manage.py showmigrations
    
    info "–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis:"
    docker exec fsp_redis redis-cli ping
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
    docker exec fsp_telegram_bot ping -c 3 redis
    
    success "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø—Ä–æ–±–ª–µ–º
debug_network() {
    info "üåê –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø—Ä–æ–±–ª–µ–º..."
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
    SERVER_IP=$(hostname -I | awk '{print $1}')
    DOMAIN="fsp.hopto.org"
    
    info "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ:"
    echo "IP –∞–¥—Ä–µ—Å: $SERVER_IP"
    echo "–î–æ–º–µ–Ω: $DOMAIN"
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ DNS —Ä–µ–∑–æ–ª—é—Ü–∏–∏:"
    nslookup $DOMAIN || warning "DNS —Ä–µ–∑–æ–ª—é—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    dig $DOMAIN A +short || warning "dig –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"
    echo "–ü–æ—Ä—Ç 8000 (–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ):"
    netstat -tlnp | grep :8000 || ss -tlnp | grep :8000 || warning "–ü–æ—Ä—Ç 8000 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"
    
    echo "–ü–æ—Ä—Ç 80 (HTTP):"
    netstat -tlnp | grep :80 || ss -tlnp | grep :80 || warning "–ü–æ—Ä—Ç 80 –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
    
    echo "–ü–æ—Ä—Ç 443 (HTTPS):"
    netstat -tlnp | grep :443 || ss -tlnp | grep :443 || warning "–ü–æ—Ä—Ç 443 –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞ (UFW):"
    if command -v ufw &> /dev/null; then
        ufw status
    else
        warning "UFW –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ iptables:"
    iptables -L INPUT -n | grep -E "(8000|80|443)" || warning "–ù–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª –¥–ª—è –≤–µ–±-–ø–æ—Ä—Ç–æ–≤"
    
    info "–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:"
    echo "1. –õ–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç:"
    curl -I http://localhost:8000/ 2>/dev/null && success "Localhost —Ä–∞–±–æ—Ç–∞–µ—Ç" || error "Localhost –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    
    echo "2. –¢–µ—Å—Ç –ø–æ IP:"
    curl -I http://$SERVER_IP:8000/ 2>/dev/null && success "IP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç" || error "IP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    
    echo "3. –¢–µ—Å—Ç –ø–æ –¥–æ–º–µ–Ω—É (–µ—Å–ª–∏ DNS —Ä–∞–±–æ—Ç–∞–µ—Ç):"
    if nslookup $DOMAIN > /dev/null 2>&1; then
        curl -I http://$DOMAIN:8000/ 2>/dev/null && success "–î–æ–º–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç" || error "–î–æ–º–µ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        warning "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –¥–æ–º–µ–Ω–∞ (DNS –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)"
    fi
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ ALLOWED_HOSTS –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:"
    if [ -f .env ]; then
        echo "ALLOWED_HOSTS –∏–∑ .env:"
        grep ALLOWED_HOSTS .env || warning "ALLOWED_HOSTS –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env"
    else
        warning "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
    docker-compose -f docker-compose.prod.yml ps web
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ nginx (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è):"
    docker logs fsp_nginx --tail=10 2>/dev/null || warning "Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    
    success "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    
    info "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    echo "1. –ï—Å–ª–∏ localhost —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ IP/–¥–æ–º–µ–Ω –Ω–µ—Ç - –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ñ–∞–π—Ä–≤–æ–ª–æ–º"
    echo "2. –ï—Å–ª–∏ DNS –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –æ–±–Ω–æ–≤–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–º–µ–Ω–∞"
    echo "3. –ï—Å–ª–∏ –ø–æ—Ä—Ç 8000 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è - –ø—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º"
    echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ALLOWED_HOSTS –≤ .env —Ñ–∞–π–ª–µ"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Nginx
setup_nginx() {
    info "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Nginx..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
    docker-compose -f docker-compose.prod.yml ps nginx
    
    info "–õ–æ–≥–∏ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
    docker logs fsp_nginx --tail=20 2>/dev/null || warning "Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx:"
    if [ -f "nginx.conf" ]; then
        success "–§–∞–π–ª nginx.conf –Ω–∞–π–¥–µ–Ω"
        echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
        docker run --rm -v "$(pwd)/nginx.conf:/etc/nginx/nginx.conf:ro" nginx:alpine nginx -t 2>/dev/null && success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞" || error "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    else
        error "–§–∞–π–ª nginx.conf –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    fi
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"
    echo "–ü–æ—Ä—Ç 80 (HTTP):"
    netstat -tlnp | grep :80 || ss -tlnp | grep :80 || warning "–ü–æ—Ä—Ç 80 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"
    
    echo "–ü–æ—Ä—Ç 443 (HTTPS):"
    netstat -tlnp | grep :443 || ss -tlnp | grep :443 || warning "–ü–æ—Ä—Ç 443 –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è (SSL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)"
    
    echo "–ü–æ—Ä—Ç 8000 (Django):"
    netstat -tlnp | grep :8000 || ss -tlnp | grep :8000 || warning "–ü–æ—Ä—Ç 8000 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"
    
    info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ nginx (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ):"
    read -p "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx..."
        docker-compose -f docker-compose.prod.yml stop nginx
        
        info "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
        docker-compose -f docker-compose.prod.yml rm -f nginx
        
        info "–ó–∞–ø—É—Å–∫ nginx..."
        docker-compose -f docker-compose.prod.yml up -d nginx
        
        info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (10 —Å–µ–∫—É–Ω–¥)..."
        sleep 10
        
        info "–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å nginx:"
        docker-compose -f docker-compose.prod.yml ps nginx
    fi
    
    info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π:"
    SERVER_IP=$(hostname -I | awk '{print $1}')
    
    echo "–¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Django (–ø–æ—Ä—Ç 8000):"
    curl -I http://localhost:8000/ 2>/dev/null && success "Django –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞–ø—Ä—è–º—É—é" || error "Django –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    
    echo "–¢–µ—Å—Ç —á–µ—Ä–µ–∑ nginx (–ø–æ—Ä—Ç 80):"
    curl -I http://localhost/ 2>/dev/null && success "Nginx –ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã" || error "Nginx –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    
    echo "–¢–µ—Å—Ç –ø–æ –≤–Ω–µ—à–Ω–µ–º—É IP —á–µ—Ä–µ–∑ nginx:"
    curl -I http://$SERVER_IP/ 2>/dev/null && success "–í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ nginx —Ä–∞–±–æ—Ç–∞–µ—Ç" || error "–í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞:"
    if command -v ufw &> /dev/null; then
        echo "–°—Ç–∞—Ç—É—Å UFW:"
        ufw status
        
        echo "–û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ—Ä—Ç–æ–≤:"
        ufw allow 80/tcp
        ufw allow 443/tcp
        ufw allow 8000/tcp
        ufw --force enable
        success "–ü–æ—Ä—Ç—ã 80, 443, 8000 –æ—Ç–∫—Ä—ã—Ç—ã"
    else
        warning "UFW –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    success "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ nginx –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    
    info "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    echo "1. –ï—Å–ª–∏ nginx –Ω–µ –∑–∞–ø—É—â–µ–Ω - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ –≤—ã—à–µ"
    echo "2. –ï—Å–ª–∏ –ø–æ—Ä—Ç 80 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏"
    echo "3. –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –ø–æ –¥–æ–º–µ–Ω—É –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ—Ä—Ç 80 (nginx) –≤–º–µ—Å—Ç–æ 8000"
    echo "4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ DNS –¥–æ–º–µ–Ω–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP: $SERVER_IP"
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤
update() {
    info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤..."
    docker pull ghcr.io/grigra27/fair_sber_price-web:latest || warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å web –æ–±—Ä–∞–∑"
    docker pull ghcr.io/grigra27/fair_sber_price-bot:latest || warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å bot –æ–±—Ä–∞–∑"
    docker pull redis:7-alpine
    docker pull nginx:alpine
    
    info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å –Ω–æ–≤—ã–º–∏ –æ–±—Ä–∞–∑–∞–º–∏..."
    docker-compose -f docker-compose.prod.yml up -d
    
    success "–û–±—Ä–∞–∑—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
}

# –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è
backup() {
    local backup_dir="backups/$(date +%Y%m%d_%H%M%S)"
    mkdir -p "$backup_dir"
    
    info "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cp fsp/db.sqlite3 "$backup_dir/" 2>/dev/null || warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤
    cp -r fsp/logs "$backup_dir/" 2>/dev/null || warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ª–æ–≥–∏"
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    cp .env "$backup_dir/" 2>/dev/null || warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å .env"
    cp docker-compose.prod.yml "$backup_dir/"
    
    success "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $backup_dir"
}

# –û—á–∏—Å—Ç–∫–∞
clean() {
    info "–û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤..."
    docker system prune -f
    docker volume prune -f
    success "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    check_project_dir
    
    case "${1:-help}" in
        deploy)     deploy ;;
        start)      start ;;
        stop)       stop ;;
        restart)    restart ;;
        status)     status ;;
        logs)       logs "$2" ;;
        health)     health ;;
        fix)        fix ;;
        fix-bot)    fix_bot ;;
        fix-perms)  fix_permissions ;;
        debug-404)  debug_404 ;;
        debug-bot)  debug_bot ;;
        debug-net)  debug_network ;;
        nginx)      setup_nginx ;;
        update)     update ;;
        backup)     backup ;;
        clean)      clean ;;
        help|--help|-h) show_help ;;
        *)          error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"; show_help; exit 1 ;;
    esac
}

main "$@"