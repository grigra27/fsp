version: '3.8'

services:
  # Redis cache service
  redis:
    image: redis:7-alpine
    container_name: fsp_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - fsp_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django web application
  web:
    image: ghcr.io/grigra27/fair_sber_price-web:latest
    container_name: fsp_web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=fsp.production
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./fsp/logs:/app/logs
      - ./fsp/db.sqlite3:/app/db.sqlite3
      - static_files:/app/staticfiles
    networks:
      - fsp_network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/api/health/', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Telegram bot service
  telegram-bot:
    image: ghcr.io/grigra27/fair_sber_price-bot:latest
    container_name: fsp_telegram_bot
    restart: unless-stopped
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=fsp.production
    depends_on:
      web:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./fsp/logs:/app/logs
      - ./fsp/db.sqlite3:/app/db.sqlite3
    networks:
      - fsp_network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: fsp_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_files:/var/www/static:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      web:
        condition: service_healthy
    networks:
      - fsp_network

volumes:
  redis_data:
  static_files:

networks:
  fsp_network:
    driver: bridge